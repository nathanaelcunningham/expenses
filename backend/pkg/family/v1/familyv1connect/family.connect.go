// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: family/v1/family.proto

package familyv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "expenses-backend/pkg/family/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// FamilySettingsServiceName is the fully-qualified name of the FamilySettingsService service.
	FamilySettingsServiceName = "family.v1.FamilySettingsService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// FamilySettingsServiceCreateFamilySettingProcedure is the fully-qualified name of the
	// FamilySettingsService's CreateFamilySetting RPC.
	FamilySettingsServiceCreateFamilySettingProcedure = "/family.v1.FamilySettingsService/CreateFamilySetting"
	// FamilySettingsServiceListFamilySettingsProcedure is the fully-qualified name of the
	// FamilySettingsService's ListFamilySettings RPC.
	FamilySettingsServiceListFamilySettingsProcedure = "/family.v1.FamilySettingsService/ListFamilySettings"
	// FamilySettingsServiceGetFamilySettingByKeyProcedure is the fully-qualified name of the
	// FamilySettingsService's GetFamilySettingByKey RPC.
	FamilySettingsServiceGetFamilySettingByKeyProcedure = "/family.v1.FamilySettingsService/GetFamilySettingByKey"
	// FamilySettingsServiceUpdateFamilySettingProcedure is the fully-qualified name of the
	// FamilySettingsService's UpdateFamilySetting RPC.
	FamilySettingsServiceUpdateFamilySettingProcedure = "/family.v1.FamilySettingsService/UpdateFamilySetting"
	// FamilySettingsServiceDeleteFamilySettingProcedure is the fully-qualified name of the
	// FamilySettingsService's DeleteFamilySetting RPC.
	FamilySettingsServiceDeleteFamilySettingProcedure = "/family.v1.FamilySettingsService/DeleteFamilySetting"
	// FamilySettingsServiceGetMonthlyIncomeProcedure is the fully-qualified name of the
	// FamilySettingsService's GetMonthlyIncome RPC.
	FamilySettingsServiceGetMonthlyIncomeProcedure = "/family.v1.FamilySettingsService/GetMonthlyIncome"
	// FamilySettingsServiceSetMonthlyIncomeProcedure is the fully-qualified name of the
	// FamilySettingsService's SetMonthlyIncome RPC.
	FamilySettingsServiceSetMonthlyIncomeProcedure = "/family.v1.FamilySettingsService/SetMonthlyIncome"
	// FamilySettingsServiceAddIncomeSourceProcedure is the fully-qualified name of the
	// FamilySettingsService's AddIncomeSource RPC.
	FamilySettingsServiceAddIncomeSourceProcedure = "/family.v1.FamilySettingsService/AddIncomeSource"
	// FamilySettingsServiceRemoveIncomeSourceProcedure is the fully-qualified name of the
	// FamilySettingsService's RemoveIncomeSource RPC.
	FamilySettingsServiceRemoveIncomeSourceProcedure = "/family.v1.FamilySettingsService/RemoveIncomeSource"
	// FamilySettingsServiceUpdateIncomeSourceProcedure is the fully-qualified name of the
	// FamilySettingsService's UpdateIncomeSource RPC.
	FamilySettingsServiceUpdateIncomeSourceProcedure = "/family.v1.FamilySettingsService/UpdateIncomeSource"
)

// FamilySettingsServiceClient is a client for the family.v1.FamilySettingsService service.
type FamilySettingsServiceClient interface {
	CreateFamilySetting(context.Context, *connect.Request[v1.CreateFamilySettingRequest]) (*connect.Response[v1.CreateFamilySettingResponse], error)
	ListFamilySettings(context.Context, *connect.Request[v1.ListFamilySettingsRequest]) (*connect.Response[v1.ListFamilySettingsResponse], error)
	GetFamilySettingByKey(context.Context, *connect.Request[v1.GetFamilySettingByKeyRequest]) (*connect.Response[v1.GetFamilySettingByKeyResponse], error)
	UpdateFamilySetting(context.Context, *connect.Request[v1.UpdateFamilySettingRequest]) (*connect.Response[v1.UpdateFamilySettingResponse], error)
	DeleteFamilySetting(context.Context, *connect.Request[v1.DeleteFamilySettingRequest]) (*connect.Response[v1.DeleteFamilySettingResponse], error)
	// Income management endpoints
	GetMonthlyIncome(context.Context, *connect.Request[v1.GetMonthlyIncomeRequest]) (*connect.Response[v1.GetMonthlyIncomeResponse], error)
	SetMonthlyIncome(context.Context, *connect.Request[v1.SetMonthlyIncomeRequest]) (*connect.Response[v1.SetMonthlyIncomeResponse], error)
	AddIncomeSource(context.Context, *connect.Request[v1.AddIncomeSourceRequest]) (*connect.Response[v1.AddIncomeSourceResponse], error)
	RemoveIncomeSource(context.Context, *connect.Request[v1.RemoveIncomeSourceRequest]) (*connect.Response[v1.RemoveIncomeSourceResponse], error)
	UpdateIncomeSource(context.Context, *connect.Request[v1.UpdateIncomeSourceRequest]) (*connect.Response[v1.UpdateIncomeSourceResponse], error)
}

// NewFamilySettingsServiceClient constructs a client for the family.v1.FamilySettingsService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewFamilySettingsServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) FamilySettingsServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	familySettingsServiceMethods := v1.File_family_v1_family_proto.Services().ByName("FamilySettingsService").Methods()
	return &familySettingsServiceClient{
		createFamilySetting: connect.NewClient[v1.CreateFamilySettingRequest, v1.CreateFamilySettingResponse](
			httpClient,
			baseURL+FamilySettingsServiceCreateFamilySettingProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("CreateFamilySetting")),
			connect.WithClientOptions(opts...),
		),
		listFamilySettings: connect.NewClient[v1.ListFamilySettingsRequest, v1.ListFamilySettingsResponse](
			httpClient,
			baseURL+FamilySettingsServiceListFamilySettingsProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("ListFamilySettings")),
			connect.WithClientOptions(opts...),
		),
		getFamilySettingByKey: connect.NewClient[v1.GetFamilySettingByKeyRequest, v1.GetFamilySettingByKeyResponse](
			httpClient,
			baseURL+FamilySettingsServiceGetFamilySettingByKeyProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("GetFamilySettingByKey")),
			connect.WithClientOptions(opts...),
		),
		updateFamilySetting: connect.NewClient[v1.UpdateFamilySettingRequest, v1.UpdateFamilySettingResponse](
			httpClient,
			baseURL+FamilySettingsServiceUpdateFamilySettingProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("UpdateFamilySetting")),
			connect.WithClientOptions(opts...),
		),
		deleteFamilySetting: connect.NewClient[v1.DeleteFamilySettingRequest, v1.DeleteFamilySettingResponse](
			httpClient,
			baseURL+FamilySettingsServiceDeleteFamilySettingProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("DeleteFamilySetting")),
			connect.WithClientOptions(opts...),
		),
		getMonthlyIncome: connect.NewClient[v1.GetMonthlyIncomeRequest, v1.GetMonthlyIncomeResponse](
			httpClient,
			baseURL+FamilySettingsServiceGetMonthlyIncomeProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("GetMonthlyIncome")),
			connect.WithClientOptions(opts...),
		),
		setMonthlyIncome: connect.NewClient[v1.SetMonthlyIncomeRequest, v1.SetMonthlyIncomeResponse](
			httpClient,
			baseURL+FamilySettingsServiceSetMonthlyIncomeProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("SetMonthlyIncome")),
			connect.WithClientOptions(opts...),
		),
		addIncomeSource: connect.NewClient[v1.AddIncomeSourceRequest, v1.AddIncomeSourceResponse](
			httpClient,
			baseURL+FamilySettingsServiceAddIncomeSourceProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("AddIncomeSource")),
			connect.WithClientOptions(opts...),
		),
		removeIncomeSource: connect.NewClient[v1.RemoveIncomeSourceRequest, v1.RemoveIncomeSourceResponse](
			httpClient,
			baseURL+FamilySettingsServiceRemoveIncomeSourceProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("RemoveIncomeSource")),
			connect.WithClientOptions(opts...),
		),
		updateIncomeSource: connect.NewClient[v1.UpdateIncomeSourceRequest, v1.UpdateIncomeSourceResponse](
			httpClient,
			baseURL+FamilySettingsServiceUpdateIncomeSourceProcedure,
			connect.WithSchema(familySettingsServiceMethods.ByName("UpdateIncomeSource")),
			connect.WithClientOptions(opts...),
		),
	}
}

// familySettingsServiceClient implements FamilySettingsServiceClient.
type familySettingsServiceClient struct {
	createFamilySetting   *connect.Client[v1.CreateFamilySettingRequest, v1.CreateFamilySettingResponse]
	listFamilySettings    *connect.Client[v1.ListFamilySettingsRequest, v1.ListFamilySettingsResponse]
	getFamilySettingByKey *connect.Client[v1.GetFamilySettingByKeyRequest, v1.GetFamilySettingByKeyResponse]
	updateFamilySetting   *connect.Client[v1.UpdateFamilySettingRequest, v1.UpdateFamilySettingResponse]
	deleteFamilySetting   *connect.Client[v1.DeleteFamilySettingRequest, v1.DeleteFamilySettingResponse]
	getMonthlyIncome      *connect.Client[v1.GetMonthlyIncomeRequest, v1.GetMonthlyIncomeResponse]
	setMonthlyIncome      *connect.Client[v1.SetMonthlyIncomeRequest, v1.SetMonthlyIncomeResponse]
	addIncomeSource       *connect.Client[v1.AddIncomeSourceRequest, v1.AddIncomeSourceResponse]
	removeIncomeSource    *connect.Client[v1.RemoveIncomeSourceRequest, v1.RemoveIncomeSourceResponse]
	updateIncomeSource    *connect.Client[v1.UpdateIncomeSourceRequest, v1.UpdateIncomeSourceResponse]
}

// CreateFamilySetting calls family.v1.FamilySettingsService.CreateFamilySetting.
func (c *familySettingsServiceClient) CreateFamilySetting(ctx context.Context, req *connect.Request[v1.CreateFamilySettingRequest]) (*connect.Response[v1.CreateFamilySettingResponse], error) {
	return c.createFamilySetting.CallUnary(ctx, req)
}

// ListFamilySettings calls family.v1.FamilySettingsService.ListFamilySettings.
func (c *familySettingsServiceClient) ListFamilySettings(ctx context.Context, req *connect.Request[v1.ListFamilySettingsRequest]) (*connect.Response[v1.ListFamilySettingsResponse], error) {
	return c.listFamilySettings.CallUnary(ctx, req)
}

// GetFamilySettingByKey calls family.v1.FamilySettingsService.GetFamilySettingByKey.
func (c *familySettingsServiceClient) GetFamilySettingByKey(ctx context.Context, req *connect.Request[v1.GetFamilySettingByKeyRequest]) (*connect.Response[v1.GetFamilySettingByKeyResponse], error) {
	return c.getFamilySettingByKey.CallUnary(ctx, req)
}

// UpdateFamilySetting calls family.v1.FamilySettingsService.UpdateFamilySetting.
func (c *familySettingsServiceClient) UpdateFamilySetting(ctx context.Context, req *connect.Request[v1.UpdateFamilySettingRequest]) (*connect.Response[v1.UpdateFamilySettingResponse], error) {
	return c.updateFamilySetting.CallUnary(ctx, req)
}

// DeleteFamilySetting calls family.v1.FamilySettingsService.DeleteFamilySetting.
func (c *familySettingsServiceClient) DeleteFamilySetting(ctx context.Context, req *connect.Request[v1.DeleteFamilySettingRequest]) (*connect.Response[v1.DeleteFamilySettingResponse], error) {
	return c.deleteFamilySetting.CallUnary(ctx, req)
}

// GetMonthlyIncome calls family.v1.FamilySettingsService.GetMonthlyIncome.
func (c *familySettingsServiceClient) GetMonthlyIncome(ctx context.Context, req *connect.Request[v1.GetMonthlyIncomeRequest]) (*connect.Response[v1.GetMonthlyIncomeResponse], error) {
	return c.getMonthlyIncome.CallUnary(ctx, req)
}

// SetMonthlyIncome calls family.v1.FamilySettingsService.SetMonthlyIncome.
func (c *familySettingsServiceClient) SetMonthlyIncome(ctx context.Context, req *connect.Request[v1.SetMonthlyIncomeRequest]) (*connect.Response[v1.SetMonthlyIncomeResponse], error) {
	return c.setMonthlyIncome.CallUnary(ctx, req)
}

// AddIncomeSource calls family.v1.FamilySettingsService.AddIncomeSource.
func (c *familySettingsServiceClient) AddIncomeSource(ctx context.Context, req *connect.Request[v1.AddIncomeSourceRequest]) (*connect.Response[v1.AddIncomeSourceResponse], error) {
	return c.addIncomeSource.CallUnary(ctx, req)
}

// RemoveIncomeSource calls family.v1.FamilySettingsService.RemoveIncomeSource.
func (c *familySettingsServiceClient) RemoveIncomeSource(ctx context.Context, req *connect.Request[v1.RemoveIncomeSourceRequest]) (*connect.Response[v1.RemoveIncomeSourceResponse], error) {
	return c.removeIncomeSource.CallUnary(ctx, req)
}

// UpdateIncomeSource calls family.v1.FamilySettingsService.UpdateIncomeSource.
func (c *familySettingsServiceClient) UpdateIncomeSource(ctx context.Context, req *connect.Request[v1.UpdateIncomeSourceRequest]) (*connect.Response[v1.UpdateIncomeSourceResponse], error) {
	return c.updateIncomeSource.CallUnary(ctx, req)
}

// FamilySettingsServiceHandler is an implementation of the family.v1.FamilySettingsService service.
type FamilySettingsServiceHandler interface {
	CreateFamilySetting(context.Context, *connect.Request[v1.CreateFamilySettingRequest]) (*connect.Response[v1.CreateFamilySettingResponse], error)
	ListFamilySettings(context.Context, *connect.Request[v1.ListFamilySettingsRequest]) (*connect.Response[v1.ListFamilySettingsResponse], error)
	GetFamilySettingByKey(context.Context, *connect.Request[v1.GetFamilySettingByKeyRequest]) (*connect.Response[v1.GetFamilySettingByKeyResponse], error)
	UpdateFamilySetting(context.Context, *connect.Request[v1.UpdateFamilySettingRequest]) (*connect.Response[v1.UpdateFamilySettingResponse], error)
	DeleteFamilySetting(context.Context, *connect.Request[v1.DeleteFamilySettingRequest]) (*connect.Response[v1.DeleteFamilySettingResponse], error)
	// Income management endpoints
	GetMonthlyIncome(context.Context, *connect.Request[v1.GetMonthlyIncomeRequest]) (*connect.Response[v1.GetMonthlyIncomeResponse], error)
	SetMonthlyIncome(context.Context, *connect.Request[v1.SetMonthlyIncomeRequest]) (*connect.Response[v1.SetMonthlyIncomeResponse], error)
	AddIncomeSource(context.Context, *connect.Request[v1.AddIncomeSourceRequest]) (*connect.Response[v1.AddIncomeSourceResponse], error)
	RemoveIncomeSource(context.Context, *connect.Request[v1.RemoveIncomeSourceRequest]) (*connect.Response[v1.RemoveIncomeSourceResponse], error)
	UpdateIncomeSource(context.Context, *connect.Request[v1.UpdateIncomeSourceRequest]) (*connect.Response[v1.UpdateIncomeSourceResponse], error)
}

// NewFamilySettingsServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewFamilySettingsServiceHandler(svc FamilySettingsServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	familySettingsServiceMethods := v1.File_family_v1_family_proto.Services().ByName("FamilySettingsService").Methods()
	familySettingsServiceCreateFamilySettingHandler := connect.NewUnaryHandler(
		FamilySettingsServiceCreateFamilySettingProcedure,
		svc.CreateFamilySetting,
		connect.WithSchema(familySettingsServiceMethods.ByName("CreateFamilySetting")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceListFamilySettingsHandler := connect.NewUnaryHandler(
		FamilySettingsServiceListFamilySettingsProcedure,
		svc.ListFamilySettings,
		connect.WithSchema(familySettingsServiceMethods.ByName("ListFamilySettings")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceGetFamilySettingByKeyHandler := connect.NewUnaryHandler(
		FamilySettingsServiceGetFamilySettingByKeyProcedure,
		svc.GetFamilySettingByKey,
		connect.WithSchema(familySettingsServiceMethods.ByName("GetFamilySettingByKey")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceUpdateFamilySettingHandler := connect.NewUnaryHandler(
		FamilySettingsServiceUpdateFamilySettingProcedure,
		svc.UpdateFamilySetting,
		connect.WithSchema(familySettingsServiceMethods.ByName("UpdateFamilySetting")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceDeleteFamilySettingHandler := connect.NewUnaryHandler(
		FamilySettingsServiceDeleteFamilySettingProcedure,
		svc.DeleteFamilySetting,
		connect.WithSchema(familySettingsServiceMethods.ByName("DeleteFamilySetting")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceGetMonthlyIncomeHandler := connect.NewUnaryHandler(
		FamilySettingsServiceGetMonthlyIncomeProcedure,
		svc.GetMonthlyIncome,
		connect.WithSchema(familySettingsServiceMethods.ByName("GetMonthlyIncome")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceSetMonthlyIncomeHandler := connect.NewUnaryHandler(
		FamilySettingsServiceSetMonthlyIncomeProcedure,
		svc.SetMonthlyIncome,
		connect.WithSchema(familySettingsServiceMethods.ByName("SetMonthlyIncome")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceAddIncomeSourceHandler := connect.NewUnaryHandler(
		FamilySettingsServiceAddIncomeSourceProcedure,
		svc.AddIncomeSource,
		connect.WithSchema(familySettingsServiceMethods.ByName("AddIncomeSource")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceRemoveIncomeSourceHandler := connect.NewUnaryHandler(
		FamilySettingsServiceRemoveIncomeSourceProcedure,
		svc.RemoveIncomeSource,
		connect.WithSchema(familySettingsServiceMethods.ByName("RemoveIncomeSource")),
		connect.WithHandlerOptions(opts...),
	)
	familySettingsServiceUpdateIncomeSourceHandler := connect.NewUnaryHandler(
		FamilySettingsServiceUpdateIncomeSourceProcedure,
		svc.UpdateIncomeSource,
		connect.WithSchema(familySettingsServiceMethods.ByName("UpdateIncomeSource")),
		connect.WithHandlerOptions(opts...),
	)
	return "/family.v1.FamilySettingsService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case FamilySettingsServiceCreateFamilySettingProcedure:
			familySettingsServiceCreateFamilySettingHandler.ServeHTTP(w, r)
		case FamilySettingsServiceListFamilySettingsProcedure:
			familySettingsServiceListFamilySettingsHandler.ServeHTTP(w, r)
		case FamilySettingsServiceGetFamilySettingByKeyProcedure:
			familySettingsServiceGetFamilySettingByKeyHandler.ServeHTTP(w, r)
		case FamilySettingsServiceUpdateFamilySettingProcedure:
			familySettingsServiceUpdateFamilySettingHandler.ServeHTTP(w, r)
		case FamilySettingsServiceDeleteFamilySettingProcedure:
			familySettingsServiceDeleteFamilySettingHandler.ServeHTTP(w, r)
		case FamilySettingsServiceGetMonthlyIncomeProcedure:
			familySettingsServiceGetMonthlyIncomeHandler.ServeHTTP(w, r)
		case FamilySettingsServiceSetMonthlyIncomeProcedure:
			familySettingsServiceSetMonthlyIncomeHandler.ServeHTTP(w, r)
		case FamilySettingsServiceAddIncomeSourceProcedure:
			familySettingsServiceAddIncomeSourceHandler.ServeHTTP(w, r)
		case FamilySettingsServiceRemoveIncomeSourceProcedure:
			familySettingsServiceRemoveIncomeSourceHandler.ServeHTTP(w, r)
		case FamilySettingsServiceUpdateIncomeSourceProcedure:
			familySettingsServiceUpdateIncomeSourceHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedFamilySettingsServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedFamilySettingsServiceHandler struct{}

func (UnimplementedFamilySettingsServiceHandler) CreateFamilySetting(context.Context, *connect.Request[v1.CreateFamilySettingRequest]) (*connect.Response[v1.CreateFamilySettingResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.CreateFamilySetting is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) ListFamilySettings(context.Context, *connect.Request[v1.ListFamilySettingsRequest]) (*connect.Response[v1.ListFamilySettingsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.ListFamilySettings is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) GetFamilySettingByKey(context.Context, *connect.Request[v1.GetFamilySettingByKeyRequest]) (*connect.Response[v1.GetFamilySettingByKeyResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.GetFamilySettingByKey is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) UpdateFamilySetting(context.Context, *connect.Request[v1.UpdateFamilySettingRequest]) (*connect.Response[v1.UpdateFamilySettingResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.UpdateFamilySetting is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) DeleteFamilySetting(context.Context, *connect.Request[v1.DeleteFamilySettingRequest]) (*connect.Response[v1.DeleteFamilySettingResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.DeleteFamilySetting is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) GetMonthlyIncome(context.Context, *connect.Request[v1.GetMonthlyIncomeRequest]) (*connect.Response[v1.GetMonthlyIncomeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.GetMonthlyIncome is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) SetMonthlyIncome(context.Context, *connect.Request[v1.SetMonthlyIncomeRequest]) (*connect.Response[v1.SetMonthlyIncomeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.SetMonthlyIncome is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) AddIncomeSource(context.Context, *connect.Request[v1.AddIncomeSourceRequest]) (*connect.Response[v1.AddIncomeSourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.AddIncomeSource is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) RemoveIncomeSource(context.Context, *connect.Request[v1.RemoveIncomeSourceRequest]) (*connect.Response[v1.RemoveIncomeSourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.RemoveIncomeSource is not implemented"))
}

func (UnimplementedFamilySettingsServiceHandler) UpdateIncomeSource(context.Context, *connect.Request[v1.UpdateIncomeSourceRequest]) (*connect.Response[v1.UpdateIncomeSourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("family.v1.FamilySettingsService.UpdateIncomeSource is not implemented"))
}
