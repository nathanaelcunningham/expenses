name: Deploy to Development

on:
  push:
    branches: [ dev, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'deploy/terraform/**'
      - '.github/workflows/deploy-dev.yml'

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    outputs:
      backend-image: ${{ steps.meta-backend.outputs.tags }}
      frontend-image: ${{ steps.meta-frontend.outputs.tags }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (backend)
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          
      - name: Extract metadata (frontend)
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
          
      - name: Terraform Init
        run: terraform init
        working-directory: deploy/terraform
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          
      - name: Terraform Plan
        run: terraform plan -var-file="../environments/dev.tfvars" -out=tfplan
        working-directory: deploy/terraform
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          TF_VAR_db_password: ${{ secrets.DEV_DB_PASSWORD }}
          TF_VAR_backend_image: ${{ needs.build-and-push.outputs.backend-image }}
          TF_VAR_frontend_image: ${{ needs.build-and-push.outputs.frontend-image }}
          
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: deploy/terraform
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}